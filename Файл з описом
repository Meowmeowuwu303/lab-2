# Завдання з Основ Програмування на Python

Цей репозиторій містить розв'язки до базових завдань з програмування, реалізовані на мові Python. Завдання охоплюють теми змінних, циклів, функцій, об'єктів та колекцій.

## Як запустити код

Для запуску цього коду не потрібні жодні додаткові бібліотеки. Вам знадобиться лише встановлений інтерпретатор Python (версії 3.6 або новішої).

1.  Зклонуйте репозиторій до себе на комп'ютер.
2.  Відкрийте термінал або командний рядок.
3.  Перейдіть до каталогу з проєктом.
4.  Виконайте команду:

```bash
python main.py
```

Ви побачите в терміналі результати виконання всіх функцій, описаних у файлі `main.py`.

## Розбір завдань

### 1. Ідентифікатори

-   **Змінна `my_name`**: Створена для зберігання рядка з іменем.
-   **Константа `YEAR_OF_BIRTH`**: У Python немає справжніх констант. За традицією, імена змінних, які не планують змінювати, пишуть великими літерами.
-   **Функція `greet(name)`**: Приймає ім'я та виводить привітання у консоль.

### 2. Цикли

-   **Функція `range_list(start, end)`**: Повертає список (в JS — масив) чисел у заданому діапазоні, включаючи обидва кінці.
-   **Функція `range_odd(start, end)`**: Повертає список непарних чисел у заданому діапазоні.

### 3. Функції

-   **Функції `average`, `square`, `cube`**: Базові математичні функції для обчислення середнього арифметичного, квадрата та куба числа.
-   **Функція `calculate`**: Демонструє вкладені виклики. Вона ітерується в циклі від 0 до 9 і на кожній ітерації викликає `square` та `cube`, а їхні результати передає у функцію `average`.

### 4. Об'єкти (Словники в Python)

-   **Функція `objects_example`**: Пояснює ключову різницю між Python та JavaScript. У Python немає `const` для блокування переприсвоєння змінної. Будь-яка змінна є просто посиланням на об'єкт. Ми можемо як змінювати сам об'єкт (якщо він `mutable`, як словник), так і переприсвоїти змінній посилання на новий об'єкт.
-   **Функція `create_user(name, city)`**: Фабрична функція, яка створює та повертає словник, що представляє користувача.

### 5. Колекції

Це завдання показує два підходи до зберігання та пошуку даних.

1.  **Список словників (аналог масиву об'єктів)**
    -   Дані зберігаються у списку `phone_book_list`.
    -   Функція `find_phone_by_name_from_list` шукає потрібний контакт, перебираючи **всі елементи** списку в циклі. Це може бути повільно для великих обсягів даних.

2.  **Хеш-таблиця (словник)**
    -   Дані зберігаються у словнику `phone_book_hash`, де ім'я є **ключем**, а телефон — **значенням**.
    -   Функція `find_phone_by_name_from_hash` знаходить телефон **миттєво** за ключем, використовуючи `phone_book_hash.get(name)`. Це набагато ефективніший підхід для таких завдань.
